{"ast":null,"code":"var _jsxFileName = \"/Users/drkrueger/Work/Solana/MekaMountPFP/web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport querystring from 'query-string';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport mekaHolder from './assets/meka.png';\nimport pfpHolder from './assets/pfp.png';\nimport noot from './assets/noot.png';\nimport download from 'downloadjs';\nimport './App.css'; //MUI stuff\n\nimport { Fab, Button, Avatar, Tooltip, Grid, Snackbar, Alert, DialogTitle, Dialog } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { createTheme } from '@mui/material/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMugHot, faCoffeePot, faCoffeeTogo, faPlus } from '@fortawesome/pro-regular-svg-icons'; //Sol Stuff\n\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\nimport { Program, Provider, web3, BN } from '@project-serum/anchor';\nimport cjkp from './sol/keypair.json';\nimport idl from './sol/idl.json'; // SystemProgram is a reference to the Solana runtime!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SystemProgram\n} = web3; // Create a keypair for the account that will get our coffee jar\n\nconst secretArray = Object.values(cjkp._keypair.secretKey);\nconst secret = new Uint8Array(secretArray);\nconst honeyPot = web3.Keypair.fromSecretKey(secret);\nconst coffeeJar = new web3.PublicKey(\"CiC2Mf4LDhvFFHmqPQiENjmJxP1dNEqdLoRXu2GqEDVF\"); // Get our program's id from the IDL file.\n\nconst programID = new PublicKey(idl.metadata.address); // Set our network to devnet.\n\nconst network = clusterApiUrl('mainnet-beta'); // Controls how we want to acknowledge when a transaction is \"done\".\n// In product use \"finalized\"\n\nconst opts = {\n  preflightCommitment: \"processed\"\n}; //MUI\n\nconst muiTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#FF5C38'\n    }\n  },\n  components: {\n    MuiBackdrop: {\n      styleOverrides: {\n        root: {\n          backgroundColor: '#FF5C38'\n        }\n      }\n    }\n  }\n}); // Constants\n\nconst REAL_SERVER = '/server';\nconst TEST_SERVER = '';\nconst TEST_JSON = '\"proxy\": \"http://localhost:5000\"';\nconst TWITTER_HANDLE = 'CoachChuckFF';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst SERVER_PATH = REAL_SERVER;\nconst COFFEE_JAR = \"CiC2Mf4LDhvFFHmqPQiENjmJxP1dNEqdLoRXu2GqEDVF\";\nconst ALERT_ERROR = \"error\";\nconst ALERT_WARNING = \"warning\";\nconst ALERT_INFO = \"info\";\nconst ALERT_SUCCESS = \"success\";\nconst ALERT_TX_TIMEOUT = 60000 * 3;\nconst ALERT_TIMEOUT = 8000;\n\nconst App = () => {\n  _s();\n\n  // State\n  const [creditsLeft, setCreditsLeft] = useState(0);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [mekAddress, setMekAddress] = useState(null);\n  const [pfpAddress, setPfpAddress] = useState(null);\n  const [pfpScale, setPfpScale] = useState(0.15);\n  const [isMounting, setIsMounting] = useState(false);\n  const [isPfpFlipped, setIsPfpFlipped] = useState(false);\n  const [isMekFlipped, setIsMekFlipped] = useState(false);\n  const [isTwitterCropped, setIsTwitterCropped] = useState(true);\n  const [mountCount, setMountCount] = useState(3);\n  const [isGettingNFTS, setIsGettingNFTs] = useState(false);\n  const [nftList, setNftList] = useState([]);\n  const [coffeeCount, setCoffeeCount] = useState(null);\n  const [solCount, setSolCount] = useState(null);\n  const [barista, setBarista] = useState(null);\n  const [coffeeOpen, setCoffeeOpen] = useState(false);\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState('');\n  const [snackBarMessageType, setSnackBarMessageType] = useState('info');\n  const [snackBarTimeout, setsnackBarTimeout] = useState(ALERT_TX_TIMEOUT);\n  const [snackBarURL, setSnackBarURL] = useState(null); // Sol Stuff\n\n  const LAMPORT_COST = 0.000000001;\n\n  const numFromRust = num => {\n    return num.toNumber();\n  };\n\n  const numToRust = num => {\n    return new BN(Math.round(num));\n  };\n\n  const solTolamports = sol => {\n    return Math.round(sol / LAMPORT_COST);\n  };\n\n  const lamportsToSol = lamports => {\n    return parseFloat((lamports * LAMPORT_COST).toFixed(5));\n  }; // Actions \n\n\n  const getProvider = () => {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new Provider(connection, window.solana, opts.preflightCommitment);\n    return provider;\n  };\n\n  const loadCoffeeJar = async () => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n      console.log(\"🧮 Tabulating Info...\");\n      const account = await program.account.coffeeJar.fetch(coffeeJar);\n      setCoffeeCount(account.coffeeCount.toNumber());\n      setSolCount(lamportsToSol(account.lamportCount));\n      setBarista(account.barista.toString());\n      console.log(\"Coffee Count: \", account.coffeeCount.toNumber());\n      console.log(\"Sol Collected: \", lamportsToSol(account.lamportCount).toFixed(2));\n      console.log(\"Barista: \", account.barista.toString());\n    } catch (error) {\n      console.log(\"Error getting coffee jar\", error);\n      setCoffeeCount(null);\n      setSolCount(lamportsToSol(null));\n      setBarista(null);\n    }\n  };\n\n  const buyCoffee = async (sol, message, thankYou) => {\n    if (sol) {\n      try {\n        const provider = getProvider();\n        const program = new Program(idl, programID, provider);\n        showSnackBar({\n          message: message,\n          messageType: ALERT_INFO,\n          timeout: ALERT_TX_TIMEOUT\n        });\n        let tx = await program.rpc.buyCoffee(numToRust(solTolamports(sol)), {\n          accounts: {\n            coffeeJar: coffeeJar,\n            from: provider.wallet.publicKey,\n            to: barista,\n            systemProgram: SystemProgram.programId\n          },\n          signers: [provider.wallet.Keypair]\n        });\n        console.log(tx);\n        showSnackBar({\n          message: thankYou,\n          messageType: ALERT_SUCCESS,\n          timeout: ALERT_TX_TIMEOUT,\n          url: `https://solscan.io/tx/${tx}`\n        });\n        await loadCoffeeJar();\n      } catch (error) {\n        console.log(\"ERROR\");\n        showSnackBar({\n          message: \"Oh no! Solana spilled the coffee! Oh well! I appreciate the thought!\",\n          messageType: ALERT_ERROR\n        });\n      }\n    }\n  };\n\n  const createCoffeeJar = async () => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n      showSnackBar({\n        message: \"☕ Crafting Coffee Jar...\",\n        messageType: ALERT_INFO,\n        timeout: ALERT_TX_TIMEOUT\n      });\n      await program.rpc.startCoffeeJar({\n        accounts: {\n          coffeeJar: honeyPot.publicKey,\n          //Web  keypair\n          barista: provider.wallet.publicKey,\n          //User keypair\n          systemProgram: SystemProgram.programId\n        },\n        signers: [honeyPot, provider.wallet.Keypair] //even though the barista is the payer, the coffeejar needs to sign this\n\n      });\n      showSnackBar({\n        message: \"☕ Crafted!\",\n        messageType: ALERT_SUCCESS\n      });\n      await loadCoffeeJar();\n    } catch (error) {\n      showSnackBar({\n        message: \"Error creating coffeejar\",\n        messageType: ALERT_ERROR\n      });\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    connectWallet({\n      onlyIfTrusted: true\n    });\n  };\n\n  const connectWallet = async _ref => {\n    let {\n      onlyIfTrusted = false\n    } = _ref;\n\n    try {\n      const {\n        solana\n      } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          const response = await solana.connect({\n            onlyIfTrusted: onlyIfTrusted\n          }); // showSnackBar({\n          //   message: \"Connected Phantom Wallet! 👻\",\n          //   messageType: ALERT_INFO\n          // });\n\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        showSnackBar({\n          message: \"Solana object not found! Get a Phantom Wallet 👻\",\n          messageType: ALERT_ERROR\n        });\n      }\n    } catch (error) {\n      console.error(`Error checking wallet [${error}]`);\n    }\n  }; // UseEffects\n\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n      await getCreditsLeft();\n    };\n\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  useEffect(() => {\n    if (walletAddress) {\n      console.log('Fetching NFTs...'); // Call Solana program here.\n\n      loadCoffeeJar();\n      grabAllNFTs(); // Set state\n      // setGifList(TEST_GIFS);\n    }\n  }, [walletAddress]); // COFFEE\n\n  const buyACoffeeForCoach = () => {\n    if (coffeeCount == null && walletAddress != null) {\n      createCoffeeJar();\n    } else {\n      handleClickOpen();\n    }\n  };\n\n  const buyFancyCoffee = () => {\n    buyCoffeeWithSol(0.13, \"Brewing... A Fancy Coffee!\", \"Wow a fancy coffee?!? Oh you 🤗\");\n  };\n\n  const buyCoffeePot = () => {\n    buyCoffeeWithSol(0.08, \"Brewing... A Pot-o-Coffee!\", \"A whole pot of coffee?! Thank you!\");\n  };\n\n  const buyCoffeeCup = () => {\n    buyCoffeeWithSol(0.05, \"Brewing... A Cup of Coffee!\", \"A cup of coffee! Thank you anon!\");\n  };\n\n  const buyCoffeeWithSol = (sol, message, thankYou) => {\n    if (walletAddress != null) {\n      buyCoffee(sol, message, thankYou);\n    } else {\n      showSnackBar({\n        message: 'Connect your wallet first!',\n        messageType: ALERT_WARNING\n      });\n      connectWallet({\n        onlyIfTrusted: false\n      });\n    }\n  }; // Web Stuff\n\n\n  const getURLData = function () {\n    let baseURL = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let requestedURL = baseURL + path + (params.length == 0 ? \"\" : \"?\" + querystring.stringify(params));\n    return new Promise((resolve, reject) => {\n      fetch(requestedURL, {\n        method: 'GET',\n        cache: 'no-cache',\n        headers: {\n          'accept': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer'\n      }).then(response => {\n        response.json().then(data => {\n          resolve(data);\n        }).catch(error => {\n          reject(`Could not get JSON (${requestedURL})`);\n        });\n      }).catch(error => {\n        reject(`Could not get URL (${requestedURL})`);\n      });\n    });\n  };\n\n  const grabAllNFTs = () => {\n    if (!isGettingNFTS) {\n      setIsGettingNFTs(true);\n      getURLData(\"https://public-api.solscan.io\", \"/account/tokens\", {\n        account: `${walletAddress}`\n      }).then(data => {\n        //Grab NFT Tokens\n        let promises = [];\n        data.forEach(token => {\n          if (token.tokenAmount != null && token.tokenAmount.amount == 1 && token.tokenAmount.decimals == 0) {\n            promises.push(getURLData(\"https://public-api.solscan.io\", `/account/${token.tokenAddress}`));\n          }\n        }); // Get Metadata on all\n\n        Promise.all(promises).then(nfts => {\n          //Grab only the useful stuff\n          let nftMetadata = [];\n          nfts.forEach(nft => {\n            try {\n              if (nft.metadata == null) {\n                throw new Error('No metadata');\n              }\n\n              if (nft.metadata.data.name == null) {\n                throw new Error('No name!');\n              }\n\n              if (nft.metadata.data.collection == null && nft.tokenInfo.symbol == null) {\n                throw new Error(nft.metadata.data.name + \" Bad collection\");\n              }\n\n              if (nft.metadata.data.image == null) {\n                throw new Error(nft.metadata.data.name + \" Bad image\");\n              }\n\n              if (nft.account == null) {\n                throw new Error(nft.metadata.data.name + \" Bad account\");\n              } //Fuck Collections\n\n\n              let collection = null;\n\n              if (nft.metadata.data.collection != null) {\n                if (typeof nft.metadata.data.collection === 'string') {\n                  collection = nft.metadata.data.collection;\n                } else {\n                  collection = nft.metadata.data.collection.name;\n                }\n              }\n\n              if (collection == null) collection = nft.tokenInfo.symbol;\n              if (collection == null) throw new Error(nft.metadata.data.name + \" Bad collection... Again\");\n              nftMetadata.push({\n                name: nft.metadata.data.name,\n                collection: collection,\n                url: nft.metadata.data.image,\n                address: nft.account\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }); //Sort\n\n          nftMetadata.sort((a, b) => {\n            return a.collection.localeCompare(b.collection);\n          }); // showSnackBar({\n          //   message: 'Got all NFTs!',\n          //   messageType: ALERT_SUCCESS,\n          // });\n          //Update\n\n          setNftList(nftMetadata);\n          setIsGettingNFTs(false);\n        }).catch(error => {\n          showSnackBar({\n            message: 'Error Could not grab ALL NFTs',\n            messageType: ALERT_ERROR\n          });\n          console.log(error);\n          setIsGettingNFTs(false);\n        });\n      }).catch(error => {\n        showSnackBar({\n          message: 'Error Could not grab ALL NFTs',\n          messageType: ALERT_ERROR\n        });\n        console.log(error);\n        setIsGettingNFTs(false);\n      });\n    } else {\n      console.log(\"Crawling...\");\n    }\n  };\n\n  const getCreditsLeft = async () => {\n    try {\n      const response = await fetch(`${SERVER_PATH}/credits`);\n      const data = await response.json();\n      setCreditsLeft(data.credits);\n    } catch {\n      console.log(\"Could not grab credits\");\n    }\n  };\n\n  const nukeIMG = async () => {\n    try {\n      const response = await fetch(`${SERVER_PATH}/nuke/${walletAddress}`);\n      const data = await response.json();\n      console.log(data);\n    } catch {\n      console.log(\"Could not nuke img\");\n    }\n  };\n\n  const isChosenMek = nft => {\n    isChosenImg(nft, mekAddress);\n  };\n\n  const isChosenPFP = nft => {\n    isChosenImg(nft, pfpAddress);\n  };\n\n  const isChosenImg = (nft, slot) => {\n    if (slot == null) return false;\n    if (nft == null) return false;\n    return nft.address == slot.address;\n  };\n\n  const getMekaName = () => {\n    let mek = mekAddress == null ? null : mekAddress.name;\n    let pfp = pfpAddress == null ? null : pfpAddress.name;\n    let name = mek == null ? ' ' : 'Meka-';\n    name += pfp == null ? ' ' : pfp.split(' ')[0];\n    return name;\n  };\n\n  const downloadNewMek = async () => {\n    if (creditsLeft <= 0) {\n      showSnackBar({\n        message: `No more community credits! Ask @Coach Chuck for more`,\n        messageType: ALERT_WARNING\n      });\n    } else if (mountCount <= 0) {\n      showSnackBar({\n        message: `No more mounts! (But... you could refresh...)`,\n        messageType: ALERT_WARNING\n      });\n    } else if (mekAddress == null || pfpAddress == null) {\n      showSnackBar({\n        message: 'Need to pick both a Mekamount and PFP',\n        messageType: ALERT_WARNING\n      });\n    } else if (!isMounting) {\n      showSnackBar({\n        message: 'Mounting...',\n        messageType: ALERT_INFO,\n        timeout: ALERT_TX_TIMEOUT\n      });\n      setIsMounting(true);\n\n      try {\n        const response = await fetch(`${SERVER_PATH}/sol/${walletAddress}/meka/${mekAddress.address}/mekaflip/${isMekFlipped}/pfp/${pfpAddress.address}/pfpflip/${isPfpFlipped}/twittercrop/${isTwitterCropped}/scale/${pfpScale}`);\n        const blob = await response.blob();\n\n        if (blob.size < 500) {\n          const data = await response.json();\n\n          if (data.error != null) {\n            showSnackBar({\n              message: `Error mounting mek [${data.error}]`,\n              messageType: ALERT_ERROR\n            });\n          } else {\n            showSnackBar({\n              message: \"Error mounting mek [UNKNOWN]\",\n              messageType: ALERT_ERROR\n            });\n          }\n        } else {\n          download(blob, getMekaName() + \".png\");\n          setMountCount(mountCount - 1);\n          getCreditsLeft();\n          nukeIMG();\n          showSnackBar({\n            message: `LOCK AND LOAD!`,\n            messageType: ALERT_SUCCESS\n          });\n        }\n      } catch (error) {\n        showSnackBar({\n          message: `Error mounting mek [${error}]`,\n          messageType: ALERT_ERROR\n        });\n      }\n\n      setIsMounting(false);\n    } else {\n      showSnackBar({\n        message: \"Still Mounting...\",\n        messageType: ALERT_WARNING\n      });\n    }\n  }; // Popups\n\n\n  const redirectToTwitter = () => {\n    window.open(TWITTER_LINK, '_blank');\n  }; //Snackbar\n\n\n  const showSnackBar = _ref2 => {\n    let {\n      message = \"Hi there\",\n      messageType = ALERT_INFO,\n      timeout = ALERT_TIMEOUT,\n      url = null\n    } = _ref2;\n    setCoffeeOpen(false);\n    setsnackBarTimeout(timeout);\n    setSnackBarMessage(message);\n    setSnackBarMessageType(messageType);\n    setSnackBarURL(url);\n    setSnackBarOpen(true);\n  };\n\n  const closeSnackBar = () => {\n    setSnackBarOpen(false);\n  };\n\n  const handleSnackBarClose = () => {\n    closeSnackBar();\n  };\n\n  function MessageSnackbar(props) {\n    const {\n      onClose,\n      open,\n      message,\n      messageType,\n      timeout,\n      url\n    } = props;\n\n    const handleClose = () => {\n      onClose();\n    };\n\n    const typeToSeverity = type => {\n      switch (type) {\n        case \"error\":\n          return type;\n\n        case \"warning\":\n          return type;\n\n        case \"info\":\n          return type;\n\n        case \"success\":\n          return type;\n      }\n\n      return \"info\";\n    };\n\n    const typeToColor = type => {\n      console.log(type);\n\n      switch (type) {\n        case \"error\":\n          return \"#60291E\";\n\n        case \"warning\":\n          return \"#603A1D\";\n\n        case \"info\":\n          return \"#20515B\";\n\n        case \"success\":\n          return \"#2C6036\";\n      }\n\n      return \"#20515B\";\n    };\n\n    const goToURL = () => {\n      if (url != null) {\n        window.location.href = TWITTER_LINK;\n        window.location.href = url;\n      } else {\n        console.log(\"hi\");\n      }\n    };\n\n    const alert = /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"filled\",\n      severity: typeToSeverity(messageType),\n      sx: {\n        backgroundColor: typeToColor(messageType)\n      },\n      onClick: goToURL,\n      children: [message, url != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 61\n      }, this), url != null ? /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        className: \"tx-link\",\n        href: url,\n        children: \"(See Transaction)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: timeout,\n        onClose: handleClose,\n        children: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this);\n  }\n\n  MessageSnackbar.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    messageType: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    timeout: PropTypes.number.isRequired,\n    url: PropTypes.string.isRequired\n  }; //Dialog\n\n  const handleClickOpen = () => {\n    closeSnackBar();\n    setCoffeeOpen(true);\n  };\n\n  const handleClose = () => {\n    setCoffeeOpen(false);\n  };\n\n  function BuyCoachACoffeePopup(props) {\n    const {\n      onClose,\n      open\n    } = props;\n\n    const handleClose = () => {\n      onClose();\n    };\n\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      open: open,\n      theme: muiTheme,\n      PaperProps: {\n        style: {\n          backgroundColor: '#3E3E3E',\n          boxShadow: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          color: '#FAFAFA',\n          textAlign: 'center'\n        },\n        children: \"Buy Coach a Coffee!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Noot Noot\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Coach Chuck\",\n            src: noot,\n            sx: {\n              width: 89,\n              height: 89,\n              marginBottom: 2,\n              boxShadow: 5\n            },\n            onClick: redirectToTwitter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: solCount == null ? 'Connect Wallet' : `${solCount.toFixed(2)} sol`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"little-text\",\n              children: '7RawqnUsUxA8pnb8nAUTgyzRaLVRYwR9yzPR3gfzbdht'.substring(0, 5) + '...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"little-text\",\n              children: [\"Caffine Units Given: [\", coffeeCount !== null && coffeeCount !== void 0 ? coffeeCount : '⏳', \"]!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"+ 1 Fancy \\uD83D\\uDE0D\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              theme: muiTheme,\n              sx: {\n                padding: 2,\n                margin: 1\n              },\n              variant: \"contained\",\n              onClick: buyFancyCoffee,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus,\n                size: \"lg\",\n                className: \"fa-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCoffeeTogo,\n                size: \"lg\",\n                className: \"fa-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"+ 1 Pot \\u2728\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              theme: muiTheme,\n              sx: {\n                padding: 2,\n                margin: 1\n              },\n              variant: \"contained\",\n              onClick: buyCoffeePot,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus,\n                size: \"lg\",\n                className: \"fa-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCoffeePot,\n                size: \"lg\",\n                className: \"fa-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"+ 1 Cup \\u2764\\uFE0F\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              theme: muiTheme,\n              sx: {\n                padding: 2,\n                margin: 1\n              },\n              variant: \"contained\",\n              onClick: buyCoffeeCup,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus,\n                size: \"lg\",\n                className: \"fa-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faMugHot,\n                size: \"lg\",\n                className: \"fa-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this);\n  }\n\n  BuyCoachACoffeePopup.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired\n  }; // Renders\n\n  const selectNFT = nft => {\n    if (nft.name.includes(\"Mekamounts\")) {\n      setMekAddress(nft);\n    } else {\n      setPfpAddress(nft);\n    }\n  };\n\n  const mekSort = nft => {\n    return nft.name.includes(\"Mekamounts\");\n  };\n\n  const pfpSort = nft => {\n    return !nft.name.includes(\"Mekamounts\");\n  };\n\n  const getPFPList = sortFunction => {\n    return nftList.filter(sortFunction);\n  };\n\n  const renderNFTContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      href: \"https://www.magiceden.io/marketplace/mekamounts\",\n      className: \"file-name\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getPFPList(mekSort).length > 0 ? \"Choose your Mekamount...\" : \"You have no Mekamounts... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 103\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif-grid\",\n      children: getPFPList(mekSort).map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif-item\",\n        onClick: () => {\n          selectNFT(nft);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: nft.url,\n            alt: nft.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: mekAddress == null ? 'selection-overlay' : mekAddress.address != nft.address ? 'selection-overlay' : 'selected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: nft.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this)]\n      }, nft.url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      href: \"https://www.magiceden.io/marketplace/pesky_penguins\",\n      className: \"file-name\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getPFPList(pfpSort).length > 0 ? \"Choose your PFP...\" : \"You have no PFPs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 107\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif-grid\",\n      children: getPFPList(pfpSort).map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif-item\",\n        onClick: () => {\n          selectNFT(nft);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: nft.url,\n            alt: nft.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: pfpAddress == null ? 'selection-overlay' : pfpAddress.address != nft.address ? 'selection-overlay' : 'selected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: nft.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-spacing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 13\n        }, this)]\n      }, nft.url, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 736,\n    columnNumber: 5\n  }, this);\n\n  const renderLoadingContainer = () => /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"file-name\",\n    children: \"Loading NFTs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 767,\n    columnNumber: 5\n  }, this);\n\n  const renderTwitterCropSwitch = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Crop for Twitter [\", `${isTwitterCropped}`, \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isTwitterCropped,\n        onChange: () => setIsTwitterCropped(!isTwitterCropped)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 771,\n    columnNumber: 5\n  }, this);\n\n  const renderConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connected-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-container\",\n          onClick: () => {\n            setIsMekFlipped(!isMekFlipped);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isMekFlipped ? 'is-flipped' : 'can-flip',\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: mekAddress == null ? mekaHolder : mekAddress.url,\n              alt: mekaHolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sub-text\",\n              children: mekAddress == null ? \"\" : \"Mekamount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)\n      }, \"meka\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-container\",\n          onClick: () => {\n            setIsPfpFlipped(!isPfpFlipped);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isPfpFlipped ? 'is-flipped' : 'can-flip',\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pfpAddress == null ? pfpHolder : pfpAddress.url,\n              alt: pfpHolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sub-text\",\n              children: pfpAddress == null ? \"\" : \"PFP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 9\n        }, this)\n      }, \"pfp\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-spacing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-text file-name\",\n      children: mekAddress == null || pfpAddress == null ? getMekaName() : getMekaName()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 7\n    }, this), renderTwitterCropSwitch(), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"cta-button submit-gif-button\",\n      onClick: downloadNewMek,\n      disabled: isMounting,\n      children: isMounting ? `Mounting...` : `Mount [${mountCount}]`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-text\",\n      children: [\"Hello \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 7\n    }, this), isGettingNFTS ? renderLoadingContainer() : renderNFTContainer(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 785,\n    columnNumber: 5\n  }, this);\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 818,\n    columnNumber: 5\n  }, this); // Main Page\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: walletAddress ? 'authed-container' : 'container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header\",\n          children: \"\\uD83E\\uDDBE Mekamount PFP Portal \\uD83D\\uDC26\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header\",\n          children: [\"[CR Left: \", creditsLeft, \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"N F T \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this), !walletAddress && renderNotConnectedContainer(), walletAddress && renderConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"footer-text twitter-link\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `Another @${TWITTER_HANDLE} Production`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fab\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"buy\",\n        variant: \"extended\",\n        theme: muiTheme,\n        onClick: buyACoffeeForCoach,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus,\n          size: \"xl\",\n          className: \"fa-color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMugHot,\n          size: \"xl\",\n          className: \"fa-color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuyCoachACoffeePopup, {\n      open: coffeeOpen,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageSnackbar, {\n      open: snackBarOpen,\n      onClose: handleSnackBarClose,\n      messageType: snackBarMessageType,\n      message: snackBarMessage,\n      timeout: snackBarTimeout,\n      url: snackBarURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 828,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ROGHrwFSbLEx0E4OzQNgS5JVouE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/drkrueger/Work/Solana/MekaMountPFP/web/src/App.js"],"names":["React","useEffect","useState","querystring","mekaHolder","pfpHolder","noot","download","Fab","Button","Avatar","Tooltip","Grid","Snackbar","Alert","DialogTitle","Dialog","PropTypes","createTheme","FontAwesomeIcon","faMugHot","faCoffeePot","faCoffeeTogo","faPlus","Connection","PublicKey","clusterApiUrl","Program","Provider","web3","BN","cjkp","idl","SystemProgram","secretArray","Object","values","_keypair","secretKey","secret","Uint8Array","honeyPot","Keypair","fromSecretKey","coffeeJar","programID","metadata","address","network","opts","preflightCommitment","muiTheme","palette","mode","primary","main","components","MuiBackdrop","styleOverrides","root","backgroundColor","REAL_SERVER","TEST_SERVER","TEST_JSON","TWITTER_HANDLE","TWITTER_LINK","SERVER_PATH","COFFEE_JAR","ALERT_ERROR","ALERT_WARNING","ALERT_INFO","ALERT_SUCCESS","ALERT_TX_TIMEOUT","ALERT_TIMEOUT","App","creditsLeft","setCreditsLeft","walletAddress","setWalletAddress","mekAddress","setMekAddress","pfpAddress","setPfpAddress","pfpScale","setPfpScale","isMounting","setIsMounting","isPfpFlipped","setIsPfpFlipped","isMekFlipped","setIsMekFlipped","isTwitterCropped","setIsTwitterCropped","mountCount","setMountCount","isGettingNFTS","setIsGettingNFTs","nftList","setNftList","coffeeCount","setCoffeeCount","solCount","setSolCount","barista","setBarista","coffeeOpen","setCoffeeOpen","snackBarOpen","setSnackBarOpen","snackBarMessage","setSnackBarMessage","snackBarMessageType","setSnackBarMessageType","snackBarTimeout","setsnackBarTimeout","snackBarURL","setSnackBarURL","LAMPORT_COST","numFromRust","num","toNumber","numToRust","Math","round","solTolamports","sol","lamportsToSol","lamports","parseFloat","toFixed","getProvider","connection","provider","window","solana","loadCoffeeJar","program","console","log","account","fetch","lamportCount","toString","error","buyCoffee","message","thankYou","showSnackBar","messageType","timeout","tx","rpc","accounts","from","wallet","publicKey","to","systemProgram","programId","signers","url","createCoffeeJar","startCoffeeJar","checkIfWalletIsConnected","connectWallet","onlyIfTrusted","isPhantom","response","connect","onLoad","getCreditsLeft","addEventListener","removeEventListener","grabAllNFTs","buyACoffeeForCoach","handleClickOpen","buyFancyCoffee","buyCoffeeWithSol","buyCoffeePot","buyCoffeeCup","getURLData","baseURL","path","params","requestedURL","length","stringify","Promise","resolve","reject","method","cache","headers","redirect","referrerPolicy","then","json","data","catch","promises","forEach","token","tokenAmount","amount","decimals","push","tokenAddress","all","nfts","nftMetadata","nft","Error","name","collection","tokenInfo","symbol","image","sort","a","b","localeCompare","credits","nukeIMG","isChosenMek","isChosenImg","isChosenPFP","slot","getMekaName","mek","pfp","split","downloadNewMek","blob","size","redirectToTwitter","open","closeSnackBar","handleSnackBarClose","MessageSnackbar","props","onClose","handleClose","typeToSeverity","type","typeToColor","goToURL","location","href","alert","width","propTypes","func","isRequired","bool","string","number","BuyCoachACoffeePopup","style","boxShadow","color","textAlign","height","marginBottom","substring","padding","margin","selectNFT","includes","mekSort","pfpSort","getPFPList","sortFunction","filter","renderNFTContainer","map","renderLoadingContainer","renderTwitterCropSwitch","renderConnectedContainer","renderNotConnectedContainer","twitterLogo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport querystring from 'query-string';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport mekaHolder from './assets/meka.png';\nimport pfpHolder from './assets/pfp.png';\nimport noot from './assets/noot.png';\nimport download from 'downloadjs';\nimport './App.css';\n\n//MUI stuff\nimport { Fab, Button, Avatar, Tooltip, Grid, Snackbar, Alert, DialogTitle, Dialog } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { createTheme } from '@mui/material/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMugHot, faCoffeePot, faCoffeeTogo, faPlus, } from '@fortawesome/pro-regular-svg-icons'\n\n//Sol Stuff\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\nimport { Program, Provider, web3, BN } from '@project-serum/anchor';\n\nimport cjkp from './sol/keypair.json' \nimport idl from './sol/idl.json';\n\n// SystemProgram is a reference to the Solana runtime!\nconst { SystemProgram } = web3;\n\n// Create a keypair for the account that will get our coffee jar\nconst secretArray = Object.values(cjkp._keypair.secretKey);\nconst secret = new Uint8Array(secretArray);\nconst honeyPot = web3.Keypair.fromSecretKey(secret);\nconst coffeeJar = new web3.PublicKey(\"CiC2Mf4LDhvFFHmqPQiENjmJxP1dNEqdLoRXu2GqEDVF\");\n\n// Get our program's id from the IDL file.\nconst programID = new PublicKey(idl.metadata.address);\n\n// Set our network to devnet.\nconst network = clusterApiUrl('mainnet-beta');\n\n// Controls how we want to acknowledge when a transaction is \"done\".\n// In product use \"finalized\"\nconst opts = {\n  preflightCommitment: \"processed\"\n}\n\n//MUI\nconst muiTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#FF5C38',\n    },\n  },\n  components: {\n    MuiBackdrop: {\n      styleOverrides: {\n        root: {\n          backgroundColor: '#FF5C38',\n        },\n      },\n    },\n  },\n});\n\n// Constants\nconst REAL_SERVER = '/server';\nconst TEST_SERVER = '';\nconst TEST_JSON = '\"proxy\": \"http://localhost:5000\"';\nconst TWITTER_HANDLE = 'CoachChuckFF';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst SERVER_PATH = REAL_SERVER;\nconst COFFEE_JAR = \"CiC2Mf4LDhvFFHmqPQiENjmJxP1dNEqdLoRXu2GqEDVF\";\n\nconst ALERT_ERROR = \"error\";\nconst ALERT_WARNING = \"warning\";\nconst ALERT_INFO = \"info\";\nconst ALERT_SUCCESS = \"success\";\n\nconst ALERT_TX_TIMEOUT = (60000 * 3);\nconst ALERT_TIMEOUT = 8000;\n\nconst App = () => {\n  // State\n  const [creditsLeft, setCreditsLeft] = useState(0);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [mekAddress, setMekAddress] = useState(null);\n  const [pfpAddress, setPfpAddress] = useState(null);\n  const [pfpScale, setPfpScale] = useState(0.15);\n  const [isMounting, setIsMounting] = useState(false);\n  const [isPfpFlipped, setIsPfpFlipped] = useState(false);\n  const [isMekFlipped, setIsMekFlipped] = useState(false);\n  const [isTwitterCropped, setIsTwitterCropped] = useState(true);\n  const [mountCount, setMountCount] = useState(3);\n  const [isGettingNFTS, setIsGettingNFTs] = useState(false);\n  const [nftList, setNftList] = useState([]);\n  const [coffeeCount, setCoffeeCount]     = useState(null);\n  const [solCount, setSolCount]           = useState(null);\n  const [barista, setBarista]             = useState(null);\n  const [coffeeOpen, setCoffeeOpen]       = useState(false);\n\n  const [snackBarOpen, setSnackBarOpen]                 = useState(false);\n  const [snackBarMessage, setSnackBarMessage]           = useState('');\n  const [snackBarMessageType, setSnackBarMessageType]   = useState('info');\n  const [snackBarTimeout, setsnackBarTimeout]           = useState(ALERT_TX_TIMEOUT);\n  const [snackBarURL, setSnackBarURL]                   = useState(null);\n\n  // Sol Stuff\n  const LAMPORT_COST = 0.000000001\n  const numFromRust = (num) => \n  {\n    return num.toNumber();\n  }\n  const numToRust = (num) => \n  {\n    return new BN(Math.round(num));\n  }\n  \n  const solTolamports = (sol) => {\n    return Math.round(sol / LAMPORT_COST);\n  }\n\n  const lamportsToSol = (lamports) => {\n    return parseFloat((lamports * LAMPORT_COST).toFixed(5));\n  }\n\n  // Actions \n  const getProvider = () => {\n    const connection = new Connection(network, opts.preflightCommitment);\n    const provider = new Provider(\n      connection, window.solana, opts.preflightCommitment,\n    );\n    return provider;\n  }\n\n  const loadCoffeeJar = async () => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n\n      console.log(\"🧮 Tabulating Info...\");\n      const account = await program.account.coffeeJar.fetch(coffeeJar);\n\n      setCoffeeCount(account.coffeeCount.toNumber());\n      setSolCount(lamportsToSol(account.lamportCount));\n      setBarista(account.barista.toString());\n\n      console.log(\"Coffee Count: \", account.coffeeCount.toNumber());\n      console.log(\"Sol Collected: \", lamportsToSol(account.lamportCount).toFixed(2));\n      console.log(\"Barista: \", account.barista.toString());\n\n    } catch (error) {\n      console.log(\"Error getting coffee jar\", error);\n\n      setCoffeeCount(null);\n      setSolCount(lamportsToSol(null));\n      setBarista(null);\n    }\n  }\n\n  const buyCoffee = async (sol, message, thankYou) => {\n    if(sol){\n      try {\n        const provider = getProvider();\n        const program = new Program(idl, programID, provider);\n\n        showSnackBar({\n          message: message,\n          messageType: ALERT_INFO,\n          timeout: ALERT_TX_TIMEOUT,\n        });\n\n        let tx = await program.rpc.buyCoffee(\n          numToRust(solTolamports(sol)),\n          {\n            accounts: {\n              coffeeJar: coffeeJar,\n              from: provider.wallet.publicKey,\n              to: barista,\n              systemProgram: SystemProgram.programId,\n            },\n            signers: [provider.wallet.Keypair]\n          }\n        );\n\n        console.log(tx);\n\n        showSnackBar({\n          message: thankYou,\n          messageType: ALERT_SUCCESS,\n          timeout: ALERT_TX_TIMEOUT,\n          url: `https://solscan.io/tx/${tx}`\n        });\n\n        await loadCoffeeJar();\n      } catch (error) {\n        console.log(\"ERROR\");\n        showSnackBar({\n          message: \"Oh no! Solana spilled the coffee! Oh well! I appreciate the thought!\",\n          messageType: ALERT_ERROR,\n        });\n      }\n    }\n  }\n\n  const createCoffeeJar = async () => {\n    try {\n      const provider = getProvider();\n      const program = new Program(idl, programID, provider);\n\n      showSnackBar({\n        message: \"☕ Crafting Coffee Jar...\",\n        messageType: ALERT_INFO,\n        timeout: ALERT_TX_TIMEOUT,\n      });\n      await program.rpc.startCoffeeJar({\n        accounts: {\n          coffeeJar: honeyPot.publicKey,                //Web  keypair\n          barista: provider.wallet.publicKey,             //User keypair\n          systemProgram: SystemProgram.programId,\n        },\n        signers: [honeyPot, provider.wallet.Keypair], //even though the barista is the payer, the coffeejar needs to sign this\n      });  \n\n      showSnackBar({\n        message: \"☕ Crafted!\",\n        messageType: ALERT_SUCCESS,\n      });\n\n      await loadCoffeeJar();\n    } catch (error) {\n      showSnackBar({\n        message: \"Error creating coffeejar\",\n        messageType: ALERT_ERROR,\n      });\n    }\n  }\n\n  const checkIfWalletIsConnected = async () => {\n    connectWallet({onlyIfTrusted: true});\n  };\n\n  const connectWallet = async ({onlyIfTrusted = false}) => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          const response = await solana.connect({ onlyIfTrusted: onlyIfTrusted });\n\n          // showSnackBar({\n          //   message: \"Connected Phantom Wallet! 👻\",\n          //   messageType: ALERT_INFO\n          // });\n\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        showSnackBar({\n          message: \"Solana object not found! Get a Phantom Wallet 👻\",\n          messageType: ALERT_ERROR\n        });\n      }\n    } catch (error) {\n      console.error(`Error checking wallet [${error}]`);\n    }\n  };\n  \n  // UseEffects\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n      await getCreditsLeft();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  \n  useEffect(() => {\n    if (walletAddress) {\n      console.log('Fetching NFTs...');\n      \n      // Call Solana program here.\n      loadCoffeeJar();\n      grabAllNFTs();\n  \n      // Set state\n      // setGifList(TEST_GIFS);\n    }\n  }, [walletAddress]);\n\n  // COFFEE\n  const buyACoffeeForCoach = () => {\n    if(coffeeCount == null && walletAddress != null){\n      createCoffeeJar();\n    } else {\n      handleClickOpen();\n    }\n  }\n\n  const buyFancyCoffee = () => {\n    buyCoffeeWithSol(0.13, \"Brewing... A Fancy Coffee!\", \"Wow a fancy coffee?!? Oh you 🤗\");\n  }\n\n  const buyCoffeePot = () => {\n    buyCoffeeWithSol(0.08, \"Brewing... A Pot-o-Coffee!\", \"A whole pot of coffee?! Thank you!\");\n  }\n\n  const buyCoffeeCup = () => {\n    buyCoffeeWithSol(0.05, \"Brewing... A Cup of Coffee!\", \"A cup of coffee! Thank you anon!\");\n  }\n\n  const buyCoffeeWithSol = (sol, message, thankYou) => {\n    if(walletAddress != null){\n      buyCoffee(sol, message, thankYou);\n    } else {\n      showSnackBar({\n        message: 'Connect your wallet first!',\n        messageType: ALERT_WARNING,\n      });\n      connectWallet({onlyIfTrusted: false});\n    }\n  }\n\n  // Web Stuff\n  const getURLData = (baseURL = '', path = '', params = {}) => {\n    let requestedURL = baseURL + path + ((params.length == 0) ? \"\" : \"?\" + querystring.stringify(params));\n    return new Promise((resolve, reject) => {\n      fetch(requestedURL, {\n        method: 'GET',\n        cache: 'no-cache',\n        headers: {'accept': 'application/json'},\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      }).then((response) => {\n        response.json().then((data)=>{\n          resolve(data);\n        })\n        .catch((error) => {reject(`Could not get JSON (${requestedURL})`);});\n      })\n      .catch((error) => {reject(`Could not get URL (${requestedURL})`);});\n    });\n  }\n\n  const grabAllNFTs = () => {\n    if(!isGettingNFTS){\n      setIsGettingNFTs(true);\n      getURLData(\n        \"https://public-api.solscan.io\",\n        \"/account/tokens\",\n        { account: `${walletAddress}`,},\n      ).then((data) => {\n\n        //Grab NFT Tokens\n        let promises = [];\n        data.forEach(token => {\n          if(token.tokenAmount != null && token.tokenAmount.amount == 1 && token.tokenAmount.decimals == 0){\n            promises.push(\n              getURLData(\n                \"https://public-api.solscan.io\",\n                `/account/${token.tokenAddress}`,\n              )\n            );\n          }\n        });\n\n        // Get Metadata on all\n        Promise.all(promises)\n        .then((nfts)=>{\n          \n          //Grab only the useful stuff\n          let nftMetadata = [];\n          nfts.forEach(nft=> {\n            try{\n              if(nft.metadata == null){throw new Error('No metadata');}\n              if(nft.metadata.data.name == null){throw new Error('No name!');}\n              if(nft.metadata.data.collection == null && nft.tokenInfo.symbol == null){throw new Error(nft.metadata.data.name + \" Bad collection\");}\n              if(nft.metadata.data.image == null){throw new Error(nft.metadata.data.name + \" Bad image\");}\n              if(nft.account == null){throw new Error(nft.metadata.data.name + \" Bad account\");}\n\n              //Fuck Collections\n              let collection = null;\n              if(nft.metadata.data.collection != null){\n                if(typeof nft.metadata.data.collection === 'string'){\n                  collection = nft.metadata.data.collection;\n                } else {\n                  collection = nft.metadata.data.collection.name;\n                }\n              }\n              if(collection == null) collection = nft.tokenInfo.symbol;\n              if(collection == null) throw new Error(nft.metadata.data.name + \" Bad collection... Again\");\n\n              nftMetadata.push(\n                {\n                  name : nft.metadata.data.name, \n                  collection : collection,\n                  url : nft.metadata.data.image,\n                  address : nft.account,\n                }\n              );\n            } catch (error){\n              console.log(error);\n            }\n          });\n\n          //Sort\n          nftMetadata.sort((a, b)=>{\n            return a.collection.localeCompare(b.collection);\n          });\n\n          // showSnackBar({\n          //   message: 'Got all NFTs!',\n          //   messageType: ALERT_SUCCESS,\n          // });\n\n          //Update\n          setNftList(nftMetadata);\n          setIsGettingNFTs(false);\n        })\n        .catch((error) => {\n          showSnackBar({\n            message: 'Error Could not grab ALL NFTs',\n            messageType: ALERT_ERROR,\n          });\n          console.log(error);\n          setIsGettingNFTs(false);\n        })\n\n      })\n      .catch((error) => {\n        showSnackBar({\n          message: 'Error Could not grab ALL NFTs',\n          messageType: ALERT_ERROR,\n        });\n        console.log(error);\n        setIsGettingNFTs(false);\n      })\n    } else {\n      console.log(\"Crawling...\")\n    }\n  }\n\n  const getCreditsLeft = async () => {\n    try {\n      const response = await fetch(`${SERVER_PATH}/credits`);\n      const data = await response.json();\n      setCreditsLeft(data.credits);\n    } catch {\n      console.log(\"Could not grab credits\");\n    }\n  }\n\n  const nukeIMG = async () => {\n    try {\n      const response = await fetch(`${SERVER_PATH}/nuke/${walletAddress}`);\n      const data = await response.json();\n      console.log(data);\n    } catch {\n      console.log(\"Could not nuke img\");\n    }\n  }\n\n  const isChosenMek = (nft) => {isChosenImg(nft, mekAddress)}\n  const isChosenPFP = (nft) => {isChosenImg(nft, pfpAddress)}\n  const isChosenImg = (nft, slot) => {\n    if(slot == null) return false;\n    if(nft == null) return false;\n    return nft.address == slot.address;\n  }\n\n  const getMekaName = () => {\n    let mek = (mekAddress == null) ? null : mekAddress.name;\n    let pfp = (pfpAddress == null) ? null : pfpAddress.name;\n\n    let name = (mek == null) ? ' ' : 'Meka-';\n    name += (pfp == null) ? ' ' : pfp.split(' ')[0];\n    return name;\n  }\n\n  const downloadNewMek = async () => {\n    if(creditsLeft <= 0){\n      showSnackBar({\n        message: `No more community credits! Ask @Coach Chuck for more`,\n        messageType: ALERT_WARNING\n      });\n    } else if(mountCount <= 0){\n      showSnackBar({\n        message: `No more mounts! (But... you could refresh...)`,\n        messageType: ALERT_WARNING\n      });\n    } else if(mekAddress == null || pfpAddress == null){\n      showSnackBar({\n        message: 'Need to pick both a Mekamount and PFP',\n        messageType: ALERT_WARNING\n      });\n    } else if(!isMounting){\n      showSnackBar({\n        message: 'Mounting...',\n        messageType: ALERT_INFO,\n        timeout: ALERT_TX_TIMEOUT,\n      });\n      setIsMounting(true);\n      try {\n        const response = await fetch(`${SERVER_PATH}/sol/${walletAddress}/meka/${mekAddress.address}/mekaflip/${isMekFlipped}/pfp/${pfpAddress.address}/pfpflip/${isPfpFlipped}/twittercrop/${isTwitterCropped}/scale/${pfpScale}`);\n        const blob = await response.blob();\n\n        if(blob.size < 500){\n          const data = await response.json();\n          if(data.error != null){\n            showSnackBar({\n              message: `Error mounting mek [${data.error}]`,\n              messageType: ALERT_ERROR\n            });\n          } else {\n            showSnackBar({\n              message: \"Error mounting mek [UNKNOWN]\",\n              messageType: ALERT_ERROR\n            });\n          }\n        } else {\n          download(blob, getMekaName() + \".png\");\n          setMountCount(mountCount - 1);\n          getCreditsLeft();\n          nukeIMG();\n          showSnackBar({\n            message: `LOCK AND LOAD!`,\n            messageType: ALERT_SUCCESS\n          });\n        }\n\n      } catch (error) {\n        showSnackBar({\n          message: `Error mounting mek [${error}]`,\n          messageType: ALERT_ERROR\n        });\n      }\n\n      setIsMounting(false);\n    } else {\n      showSnackBar({\n        message: \"Still Mounting...\",\n        messageType: ALERT_WARNING,\n      });\n    }\n  };\n\n  // Popups\n  const redirectToTwitter = () => {\n    window.open(TWITTER_LINK, '_blank');\n  }\n\n  //Snackbar\n  const showSnackBar = ({message = \"Hi there\", messageType = ALERT_INFO, timeout = ALERT_TIMEOUT, url = null}) => {\n    setCoffeeOpen(false);\n    setsnackBarTimeout(timeout)\n    setSnackBarMessage(message);\n    setSnackBarMessageType(messageType);\n    setSnackBarURL(url);\n    setSnackBarOpen(true);\n  };\n\n  const closeSnackBar = () => {\n    setSnackBarOpen(false);\n  }\n\n  const handleSnackBarClose = () => {\n    closeSnackBar();\n  };\n\n  function MessageSnackbar(props) {\n    const { onClose, open, message, messageType, timeout, url } = props;\n  \n    const handleClose = () => {\n      onClose();\n    };\n\n    const typeToSeverity = (type) => {\n      switch(type) {\n        case \"error\": return type;\n        case \"warning\": return type;\n        case \"info\": return type;\n        case \"success\": return type;\n      }\n      return \"info\";\n    }\n\n    const typeToColor = (type) => {\n      console.log(type);\n      switch(type) {\n        case \"error\": return \"#60291E\";\n        case \"warning\": return \"#603A1D\";\n        case \"info\": return \"#20515B\";\n        case \"success\": return \"#2C6036\";\n      }\n\n      return \"#20515B\";\n    }\n\n    const goToURL = () => {\n      if(url != null){\n    window.location.href = TWITTER_LINK; \n\n        window.location.href = url;\n      } else {\n        console.log(\"hi\");\n      }\n    }\n  \n    const alert = (\n        <Alert variant=\"filled\" severity={typeToSeverity(messageType)} sx={{backgroundColor: typeToColor(messageType)}} onClick={goToURL}>\n          {message}\n          {(url != null) ? <div style={{width: 5}}></div> : <div></div>}\n          {(url != null) ? <a target=\"_blank\" className='tx-link' href={url}>(See Transaction)</a> : <div></div>}\n        </Alert>\n    );\n  \n    return (\n      <div>\n        <Snackbar\n          open={open}\n          autoHideDuration={timeout}\n          onClose={handleClose}\n        >{alert}</Snackbar>\n      </div>\n    );\n  }\n\n  MessageSnackbar.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    messageType: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n    timeout: PropTypes.number.isRequired,\n    url: PropTypes.string.isRequired,\n  };\n\n  //Dialog\n  const handleClickOpen = () => {\n    closeSnackBar();\n    setCoffeeOpen(true);\n  };\n\n  const handleClose = () => {\n    setCoffeeOpen(false);\n  };\n\n  function BuyCoachACoffeePopup(props) {\n    const { onClose, open } = props;\n\n    const handleClose = () => {\n      onClose();\n    };\n  \n    return (\n      <Dialog \n        onClose={handleClose} \n        open={open} \n        theme={muiTheme}\n        PaperProps={{\n          style: {\n            backgroundColor: '#3E3E3E',\n            boxShadow: 'none',\n          },\n        }}\n      >\n        <DialogTitle sx={{color: '#FAFAFA', textAlign: 'center'}}>Buy Coach a Coffee!</DialogTitle>\n        <center>\n          <Tooltip title=\"Noot Noot\">\n            <Avatar alt=\"Coach Chuck\" src={noot} sx={{ width: 89, height: 89, marginBottom: 2, boxShadow: 5}} onClick={redirectToTwitter}/>\n          </Tooltip>\n        </center>\n        <center>\n        <Tooltip title={(solCount == null) ? 'Connect Wallet' : `${solCount.toFixed(2)} sol`}>\n          <div>\n            <p className=\"little-text\">\n              {'7RawqnUsUxA8pnb8nAUTgyzRaLVRYwR9yzPR3gfzbdht'.substring(0, 5) + '...'}\n            </p>\n            <p className=\"little-text\">\n              Caffine Units Given: [{coffeeCount ?? '⏳'}]!\n            </p>\n          </div>\n        </Tooltip>\n        </center>\n        <Grid container spacing={0}>\n            <Grid item xs={4}>\n            <Tooltip title=\"+ 1 Fancy 😍\">\n                <Button theme={muiTheme} sx={{padding: 2, margin: 1}} variant=\"contained\" onClick={buyFancyCoffee}>\n                  <FontAwesomeIcon icon={faPlus} size=\"lg\" className='fa-color'/>\n                  <div style={{width: 5}}></div>\n                  <FontAwesomeIcon icon={faCoffeeTogo} size=\"lg\" className='fa-color'/>\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item xs={4}>\n              <Tooltip title=\"+ 1 Pot ✨\">\n                <Button theme={muiTheme} sx={{padding: 2, margin: 1}} variant=\"contained\" onClick={buyCoffeePot}>\n                  <FontAwesomeIcon icon={faPlus} size=\"lg\" className='fa-color'/>\n                  <div style={{width: 5}}></div>\n                  <FontAwesomeIcon icon={faCoffeePot} size=\"lg\" className='fa-color'/>\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item xs={4}>\n            <Tooltip title=\"+ 1 Cup ❤️\">\n                <Button theme={muiTheme} sx={{padding: 2, margin: 1}} variant=\"contained\" onClick={buyCoffeeCup}>\n                  <FontAwesomeIcon icon={faPlus} size=\"lg\" className='fa-color'/>\n                  <div style={{width: 5}}></div>\n                  <FontAwesomeIcon icon={faMugHot} size=\"lg\" className='fa-color'/>\n                </Button>\n              </Tooltip>\n            </Grid>\n          </Grid>\n      </Dialog>\n    );\n  }\n\n  BuyCoachACoffeePopup.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n  };\n\n  // Renders\n  const selectNFT = (nft) => {\n\n    if(nft.name.includes(\"Mekamounts\")){\n      setMekAddress(nft);\n    } else {\n      setPfpAddress(nft);\n    }\n    \n  }\n\n  const mekSort = (nft) => {return nft.name.includes(\"Mekamounts\");}\n  const pfpSort = (nft) => {return !nft.name.includes(\"Mekamounts\");}\n  const getPFPList = (sortFunction) => {return nftList.filter(sortFunction);}\n\n  const renderNFTContainer = () => (\n    <div>\n      <a target=\"_blank\" href='https://www.magiceden.io/marketplace/mekamounts' className='file-name'><p>{getPFPList(mekSort).length > 0 ? \"Choose your Mekamount...\" : \"You have no Mekamounts... \"}</p></a>\n      <div className=\"gif-grid\">\n        {getPFPList(mekSort).map((nft) => (\n          <div className={\"gif-item\"} key={nft.url} onClick={() => {selectNFT(nft)}}>\n            <div className='overlay'>\n              <img src={nft.url} alt={nft.url}/>\n              <div className={(mekAddress == null) ? 'selection-overlay' : ((mekAddress.address != nft.address) ? 'selection-overlay' : 'selected')}></div>\n            </div>\n            <p className=\"sub-text\">{nft.name}</p>\n            <div className='mini-spacing'></div>\n          </div>\n        ))}\n      </div>\n      <a target=\"_blank\" href='https://www.magiceden.io/marketplace/pesky_penguins' className='file-name'><p>{getPFPList(pfpSort).length > 0 ? \"Choose your PFP...\" : \"You have no PFPs...\"}</p></a>\n      <div className=\"gif-grid\">\n        {getPFPList(pfpSort).map((nft) => (\n          <div className={\"gif-item\"} key={nft.url} onClick={() => {selectNFT(nft)}}>\n            <div className='overlay'>\n              <img src={nft.url} alt={nft.url}/>\n              <div className={(pfpAddress == null) ? 'selection-overlay' : ((pfpAddress.address != nft.address) ? 'selection-overlay' : 'selected')}></div>\n            </div>\n            <p className=\"sub-text\">{nft.name}</p>\n            <div className='mini-spacing'></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderLoadingContainer = () => (\n    <p className=\"file-name\">Loading NFTs...</p>\n  );\n\n  const renderTwitterCropSwitch = () => (\n    <div className=\"toggle-switch\">\n      <p>Crop for Twitter [{`${isTwitterCropped}`}]</p>\n      <label className=\"switch\">\n        <input \n          type=\"checkbox\" \n          checked={isTwitterCropped}\n          onChange={()=>setIsTwitterCropped(!isTwitterCropped)}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n    </div>\n  );\n\n  const renderConnectedContainer = () => (\n    <div className=\"connected-container\">\n        <div className=\"selected-grid\">\n        {<div className=\"selected-item\" key={\"meka\"}>\n          <div className='flip-container' onClick={() => {setIsMekFlipped(!isMekFlipped);}}>\n            <div className={isMekFlipped ? 'is-flipped' : 'can-flip'}>\n              <img src={mekAddress == null ? mekaHolder : mekAddress.url} alt={mekaHolder} />\n              <p className=\"sub-text\">{mekAddress == null ? \"\" : \"Mekamount\"}</p>\n            </div>\n          </div>\n        </div>}\n        {<div className=\"selected-item\" key={\"pfp\"}>\n        <div className='flip-container' onClick={() => {setIsPfpFlipped(!isPfpFlipped);}}>\n            <div className={isPfpFlipped ? 'is-flipped' : 'can-flip'}>\n              <img src={pfpAddress == null ? pfpHolder : pfpAddress.url} alt={pfpHolder} />\n              <p className=\"sub-text\">{pfpAddress == null ? \"\" : \"PFP\"}</p>\n            </div>\n          </div>\n        </div>}\n      </div>\n      <div className='mini-spacing'></div>\n      <p className=\"sub-text file-name\">{(mekAddress == null || pfpAddress == null) ? getMekaName() : getMekaName()}</p>\n      {renderTwitterCropSwitch()}\n      <button type=\"submit\" className=\"cta-button submit-gif-button\" onClick={downloadNewMek} disabled={isMounting}>\n        {(isMounting ? `Mounting...` : `Mount [${mountCount}]`)}\n      </button>\n      <div className='spacing'></div>\n      <p className=\"sub-text\">Hello {walletAddress}</p>\n      {(isGettingNFTS) ? renderLoadingContainer() : renderNFTContainer()}\n      <div className='spacing'></div>\n    </div>\n  );\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  // Main Page\n  return (\n    <div className=\"App\">\n\t\t\t{/* This was solely added for some styling fanciness */}\n\t\t\t<div className={walletAddress ? 'authed-container' : 'container'}>\n        <div className=\"header-container\">\n          <p className=\"header\">🦾 Mekamount PFP Portal 🐦</p>\n          <p className=\"header\">[CR Left: {creditsLeft}]</p>\n          <p className=\"sub-text\">\n            N F T ✨\n          </p>\n          {!walletAddress && renderNotConnectedContainer()}\n          {/* We just need to add the inverse here! */}\n          {walletAddress && renderConnectedContainer()}\n        </div>\n        <div className='spacing'></div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            target=\"_blank\"\n            className=\"footer-text twitter-link\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`Another @${TWITTER_HANDLE} Production`}</a>\n        </div>\n      </div>\n      <div className='fab'>\n        <Fab color=\"primary\" aria-label=\"buy\" variant=\"extended\" theme={muiTheme} onClick={buyACoffeeForCoach}>\n          <FontAwesomeIcon icon={faPlus} size=\"xl\" className='fa-color'/>\n          <div style={{width: 5}}></div>\n          <FontAwesomeIcon icon={faMugHot} size=\"xl\" className='fa-color'/>\n        </Fab>\n      </div>\n      <BuyCoachACoffeePopup\n        open={coffeeOpen}\n        onClose={handleClose}\n      />\n      <MessageSnackbar\n        open={snackBarOpen}\n        onClose={handleSnackBarClose}\n        messageType={snackBarMessageType}\n        message={snackBarMessage}\n        timeout={snackBarTimeout}\n        url={snackBarURL}\n      />\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}